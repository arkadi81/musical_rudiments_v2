<!-- modular version -->


<script>

// 12/23/2015 - this part works - just need to automate randomization and add some sample strings. its fairly annoying to read to begin with so can stay server side for now
// TODO: currently using the stupid easy vextab API - this is workable, but we may want to do the proper implementation or the vexflow version later

// this module is the rhythm testing thing
// concept - uses vextab-div.js for simplicity
// an array of random strings and associations with rhythm and meters is saved in the options file. 
// rannomize pulls out several lines from the prescripted rhythms and builds a selector for time signatures and meter
	var moduleNumber = 2;
	
	var moduleOptions = [];

		moduleOptions[moduleNumber] = {
			'moduleHeadingText': 'Module 2: Identify the following rhythms and meters',
			'moduleInstructions': 'For each of the following, select the meter (simple or compound, duple, triple or quadruple) and the appropriate time signature',
			'totalQuestions': 2,
			'questionBank': [
				[':q (5/2.5/3.7/4) :8 7-5h6/3 ^3^ 5h6-7/5 ^3^ :q 7V/4 | :8 t12p7/4 s5s3/4 :8 3s:16:5-7/5 :q 3/3| ','Simple','Quadruple',4,4], 
				/* more complicated version:

				':q =|: (5/2.5/3.7/4) :8 7-5h6/3 ^3^ 5h6-7/5 ^3^ :q 7V/4 ' */
				['C/4 :8 D-E/4 F#-E/5 | :q B/3 :8 D-E/4 F#-E/5 |','Simple','triple',3,4],
				[':8 C-E-G/4 :q C/5 :8 B/4 | :8 A-G-F/4 :qd E/4', 'Compound','duple',6,8],
				[':8 C/5 B-A/4 B-A-G/4 :q F/5 :8 G/4 | :8 F/4 :16 G-A/4 :8 B/4  :q E/4 :8 F/4 :qd C/5 ', 'Compound','triple',9,8],
				// add more if requested

			]		
		}


							
</script>


 <!-- DOM constructor -->
<div class="panel panel-primary" style="display:none" id="module2">
  	<div class="panel-heading">
    	<script>document.write(moduleOptions[moduleNumber].moduleHeadingText);</script>
  	</div>
  	<div class="panel-body" id='module2Container' align="center"></div>
   		<div class="panel-heading">
   			<?php include("panel_buttons.php"); ?>    		
   		</div>
  		<script> 

	  		// add instructions to module head 
	  		document.getElementById('module'+moduleNumber+'Container').innerHTML+='<div>'+moduleOptions[moduleNumber].moduleInstructions+'</div>';


	  		// prepare modifiers buttons: Simple / compound, duple/triple/quadruple, time signature
	  		var selector_meter_type='<select ><option>Simple</option><option>Compound</option></select>';
	  		var selector_meter_ticks='<select><option>double</option><option>triple</option><option>quadruple</option></select>'
	  		var selector_time_signature_upper = '<select><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option></select>'; // maybe just a numerical input field?
	  		var selector_time_signature_lower = '<select><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option></select>';
	  		
			// ----------------------------------------------------------------

			// build visual - a div cell for each scale, a canvas inside div, and render 8 C notes on treble clef

			// experiment - easy vextab version

			// 
			
	  		
	 		for (i=0; i<moduleOptions[moduleNumber].totalQuestions;i++) {
	  			//dynamically build up the array of divs - only really need one per line for this
				//document.getElementById('module'+2+'Container').innerHTML+='<div class="col-sm-12 col-xs-12 center"  id="module2Question'+i+'div"></div>';
				var contentDivID = 'module' + moduleNumber + 'Question'+i;

				//var rndQuestionNum = getRandomInt(0, moduleOptions[moduleNumber].questionBank.length-1);
				//alert('rnd question is: ' +rndQuestionNum)
				//var str = moduleOptions[moduleNumber].questionBank[rndQuestionNum][0];
				//alert(str);

				
				
			}
			/*for (i=0; i<totalQuestions();i++) {
	  			//dynamically build up the array of instruction spacers and canvases inside divs
	  			document.getElementById('module'+4+'Question'+i+'div').innerHTML+='<div id="module2Question' + i + 'Prompt"</div>';
				document.getElementById('module'+4+'Question'+i+'div').innerHTML+='<table class="table"><tr><td><canvas height=100 width=700 id="module2Canvas'+i+'"></canvas></td><tr><td>'+modifierPanel+'</td></table>';
			}*/

			// fill em up - this will be separated and only executed on load!! need to render canvas, and add instructors and selectors for maj and min

			if (global_theme_override) { document.getElementById('module'+moduleNumber).setAttribute('class','panel '+global_panel_class) };
			if (global_visibility_override) { document.getElementById('module'+moduleNumber).setAttribute('style',global_initial_visibility)};

		</script>
	</div>
   


 <!---RANDOMIZING DATA STAGE -->
<script> 
	// randomize questions (bank must have at least as many options as number of questions)
	var res = getRandomArray(moduleOptions[moduleNumber].totalQuestions,0,moduleOptions[moduleNumber].questionBank.length-1); 
	
	for (i=0; i<moduleOptions[moduleNumber].totalQuestions;i++) {

		var str = moduleOptions[moduleNumber].questionBank[res[i]][0];
		var timesig = moduleOptions[moduleNumber].questionBank[res[i]][3]+'/' + moduleOptions[moduleNumber].questionBank[res[i]][4];;
		//alert(timesig);
		var vextab_sample_code = '<div class="vex-tabdiv" width=680 scale=1.0 editor="false" \n ' +
			    'editor_width=680 editor_height=330>options space=20 \n' +
			    'stave\n' +
			    //'key=A time=6/8\n' + // remove the time sig later but whaterver, this is just a sample. make it into sample bank
			    //'time='+ moduleOptions[moduleNumber].questionBank[res[i]][4] + '/' + moduleOptions[moduleNumber].questionBank[res[i]][5] +' \n'+
			    'time=' + timesig + '\n' +
			    'notes ' + str +'\n' +
				//'notes :8 t12p7/4 s5s3/4 :8 3s:16:5-7/5 :h p5/4\n ' +
				'options space=25\n ' +
				'</div>';
		document.getElementById('module'+2+'Container').innerHTML+=vextab_sample_code;
		document.getElementById('module'+2+'Container').innerHTML+='Meter type: ' + selector_meter_type + selector_meter_ticks;
		document.getElementById('module'+2+'Container').innerHTML+=' Time signature: ' + selector_time_signature_upper + '/' +selector_time_signature_lower;
	}
		

</script>
<script src="vextab/releases/vextab-div.js"></script>
<script>
// vextab renderer
// from https://github.com/0xfe/vextab

/*vextab = new VexTab;


VexTab = vextab.VexTab;
Artist = vextab.Artist;
Renderer = vextab.Vex.Flow.Renderer;

// Create VexFlow Renderer from canvas element with id #boo.
renderer = new Renderer($('#'+contentDivID)[0], Renderer.Backends.CANVAS);

// Initialize VexTab artist and parser.
artist = new Artist(10, 10, 600, {scale: 0.8});
vextab = new VexTab(artist);

try {
  // Parse VexTab music notation passed in as a string.
  vextab.parse("tabstave notation=true\n notes :q 4/4\n")

  // Render notation onto canvas.
  artist.render(renderer);
} catch (e) {
  console.log(e);
}*/
</script>
